#include <iostream>
#include <cctype>
#include <vector>
#include <stack>
#include <queue>
#include <fstream>
#include <string>
#include <limits>
#include <algorithm>
#include "imptext.h"

using namespace std;

void clear()
{
    system ("clear");
}

inline void WaitEnter()
    {
        cout <<endl<<"PRESIONE 'ENTER' PARA CONTINUAR"<<endl;
        while (cin.get()!='\n');
    }

class Contacto
{
private:
    string icono;
    string nombre;
    string correo;
    bool favorito;
    string numero;
    int contador;
public:
    Contacto()
    {}
    Contacto(string i, string n, string c, string num)
    {
        icono = i;
        nombre = n;
        correo = c;
        numero = num;
    }
    
    string get_nombre() const
    {
        return nombre;
    }
    void set_nombre(string n)
    {
        nombre = n;
    }
    string get_correo()
    {
        return correo;
    }
    void set_correo(string c)
    {
        correo = c;
    }
    string get_numero()
    {
        return numero;
    }
    void set_numero(string num)
    {
        numero = num;
    }
    int get_contador()
    {
        return contador;
    }
    string get_icono()
    {
        return icono;
    }
    void set_icono(char i)
    {
        icono = i;
    }
    bool get_favorito()
    {
        return favorito;
    }
    void set_favorito(int f)
    {
        favorito = f;
    }
    string to_string()
    {
        string separacion = ", ";
        return icono + separacion + nombre + separacion + correo + separacion + numero;
    }
    
    friend ostream& operator<<(ostream& os, Contacto& b)
    {
		return os << b.to_string();
    }
    
    void print_contacto()
    {
        cout << *this;
    }
};

vector<Contacto> general;

int buscar_con(vector<Contacto>& lista, const string& elemento) {
    for (int i = 0; i < lista.size(); ++i) {
        if (lista[i].get_nombre() == elemento) {
            return i; 
        }
    }
    return -1; 
}


void anadir_contacto(){   
    bool n = true;
    string ic;
    
    do{
        
        cout<<"Ingrese los datos del contacto:"<<endl<<"Icono (Único carácter):"<<endl<<"Lista de iconos"<<endl;
        calltext("listaicon.txt");
        int ans;
        cin>>ans;
        
            switch(ans){
                case 1:
            
                    ic = "Ø";
                    n = false;
                
                    break;
                case 2:
                
                    ic = "£";
                    n = false;
                
                    break;
                
                case 3:
                
                    ic = "ƒ";
                    n = false;
                
                    break;
                case 4:
                
                    ic = "Ð";
                    n = false;
                
                    break;
                case 5:
                
                    ic = "Ð";
                    n = false;
                
                    break;
                case 6:
                
                    ic = "¥";
                    n = false;
                
                    break;
                case 7:
                
                    ic = "¶";
                    n = false;
                
                    break;
                case 8:
                
                    ic = "§";
                    n = false;
                
                    break;
                case 9:
                
                    cout<<"Ingrese un carácter:"<<endl;
                    cin>>ic;
                    n = false;
                    ic = ic[0];
                    break;
                
                default:
                    
                    cout << "Ingrese un valor valido (1-9)" << endl;
                    break;
        
                }
    }while(n);
    
    clear();
    cin.ignore(); 
    string no;
    cout<<"Nombre:"<<endl;
    cin.ignore();
    getline(cin, no);
    clear();
    
    cout<<"Correo:"<<endl;
    string co;
    cin>>co;
    cin.ignore();
    clear();
 
    cout<<"Número (sin espacios):"<<endl;
    string nu;
    cin>>nu;
    clear();
    cin.ignore(); 
    
    Contacto con (ic,no,co,nu);
    
    cout<<"El Contacto se ve así"<<endl;
    con.print_contacto();
    cout<<endl<<"Desea editar el contacto?"<<endl<<"         'Y' , 'N'"<<endl;
    string ans2;
    cin>>ans2;
    if(ans2 == "Y" || ans2 == "y")
    {
        anadir_contacto();
    }
    else if (ans2 == "N" || ans2 == "n")
    {
        general.push_back(con);
        cout<<"Contacto agregado.";
        clear();
    }

    cout<<endl<<"Desea añadir otro contacto?"<<endl<<"         'Y' , 'N'"<<endl;
    string ans3;
    cin>>ans3;
    if(ans3 == "Y" || ans3 == "y")
    {
        clear();
        anadir_contacto();
    }
    else if (ans3 == "N" || ans3 == "n")
    {
        clear();
    }
}

void revisar_lista()
{
    
}

void ordenar() {
    sort(general.begin(), general.end(), [](const Contacto& a, const Contacto& b) {
        return a.get_nombre() < b.get_nombre(); // sortea el vector en orden alfabético
    });
}

void eliminar_contacto()
{
    string con_eliminar;
    int resultado;
    
    cout << "Cual es el nombre del contacto que desea eliminar" << endl;
    cin >> con_eliminar;
    
    resultado = buscar_con(general, con_eliminar);
    
    if(resultado != -1){
        general.erase(general.begin() + resultado);
        cout << "El contacto fue eliminado con exito" << endl;
    }else{
        cout << "El contacto que quiere eliminar no se encuentra entre tus contactos" << endl; 
    }
}

int main()
{   
    calltext("title.txt");
    
    WaitEnter();
    clear();
    
    bool m = true;
    int ans;
    
    do{
        cout<<"Bienvenido a WhosApp, El directorio de contactos #1 de UR y (debatiblemente) del mundo"<<endl<<endl<<"-Que desea hacer hoy?"<<endl;
        cout<<"1. Añadir Contacto"<<endl<<"2. Revisar lista de contactos"<<endl<<"3. Revisar favoritos"<<endl<<"4. Revisar recientes"<<endl<<"5. Eliminar contacto"<<endl<<"6. Editar contacto"<<endl<<"7. Salir"<<endl;
        cin>> ans;
        switch(ans)
        {
            case 1:
                clear();
                anadir_contacto();
                m = true;
                break;
            case 2:
                m = true;
                break;
            case 3:
                m = true;
                break;
            case 4:
                m = true;
                break;
            case 5:
                m = true;
                break;
            case 6:
                m = true;
                break;
            case 7:
                cout<<"Adios :D"<<endl;
                m = false;
                break;
            default:
								cout << "Ingrese un valor valido (1-7)" << endl;
                break;
        }
        
    }while(m);
    
    return 0;
}
